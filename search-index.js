var searchIndex = JSON.parse('{\
"quick_error":{"doc":"A macro which makes errors easy to write","i":[[14,"quick_error","quick_error","Main macro that does all the work",null,null]],"p":[]},\
"rustc_serialize":{"doc":"Support code for encoding and decoding types.","i":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line…",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style…",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64…",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following…",4,[[["config",3]],["string",3]]],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64…",5,[[],[["result",4],["vec",3],["frombase64error",4]]]],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the…",7,[[],["string",3]]],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal…",8,[[],[["vec",3],["result",4],["fromhexerror",4]]]],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in…",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of…",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json…",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack. For example, Key(\\\"foo\\\"),…",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,[[["errorcode",4]]]],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,[[],[["decoderesult",6],["decodable",8]]]],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,[[],[["encoderesult",6],["string",3]]]],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a…",null,[[],[["encodable",8],["asjson",3]]]],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to…",null,[[],[["encodable",8],["asprettyjson",3]]]],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,[[],["json",4]]],[11,"new_pretty","","Creates a new encoder whose output will be written in…",17,[[["write",8]],["encoder",3]]],[11,"new","","Creates a new encoder whose output will be written in…",17,[[["write",8]],["encoder",3]]],[11,"set_indent","","Set the number of spaces to indent for each level. This is…",17,[[],["result",4]]],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",9,[[["read",8]],[["buildererror",6],["result",4]]]],[11,"from_str","","Decodes a json value from a string",9,[[],[["buildererror",6],["result",4]]]],[11,"pretty","","Borrow this json object as a pretty object to generate a…",9,[[],["prettyjson",3]]],[11,"find","","If the Json value is an Object, returns the value…",9,[[],[["json",4],["option",4]]]],[11,"find_path","","Attempts to get a nested Json Object for each key in…",9,[[],[["json",4],["option",4]]]],[11,"search","","If the Json value is an Object, performs a depth-first…",9,[[],[["json",4],["option",4]]]],[11,"is_object","","Returns true if the Json value is an Object. Returns false…",9,[[]]],[11,"as_object","","If the Json value is an Object, returns a reference to the…",9,[[],[["object",6],["option",4]]]],[11,"as_object_mut","","If the Json value is an Object, returns a mutable…",9,[[],[["option",4],["object",6]]]],[11,"into_object","","If the Json value is an Object, returns the associated…",9,[[],[["option",4],["object",6]]]],[11,"is_array","","Returns true if the Json value is an Array. Returns false…",9,[[]]],[11,"as_array","","If the Json value is an Array, returns a reference to the…",9,[[],[["array",6],["option",4]]]],[11,"as_array_mut","","If the Json value is an Array, returns a mutable reference…",9,[[],[["array",6],["option",4]]]],[11,"into_array","","If the Json value is an Array, returns the associated…",9,[[],[["option",4],["array",6]]]],[11,"is_string","","Returns true if the Json value is a String. Returns false…",9,[[]]],[11,"as_string","","If the Json value is a String, returns the associated str.…",9,[[],["option",4]]],[11,"is_number","","Returns true if the Json value is a Number. Returns false…",9,[[]]],[11,"is_i64","","Returns true if the Json value is a i64. Returns false…",9,[[]]],[11,"is_u64","","Returns true if the Json value is a u64. Returns false…",9,[[]]],[11,"is_f64","","Returns true if the Json value is a f64. Returns false…",9,[[]]],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.…",9,[[],["option",4]]],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.…",9,[[],["option",4]]],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.…",9,[[],["option",4]]],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false…",9,[[]]],[11,"as_boolean","","If the Json value is a Boolean, returns the associated…",9,[[],["option",4]]],[11,"is_null","","Returns true if the Json value is a Null. Returns false…",9,[[]]],[11,"as_null","","If the Json value is a Null, returns (). Returns None…",9,[[],["option",4]]],[11,"new","","",18,[[],["stack",3]]],[11,"len","","Returns The number of elements in the Stack.",18,[[]]],[11,"is_empty","","Returns true if the stack is empty.",18,[[]]],[11,"get","","Provides access to the StackElement at a given index.…",18,[[],["stackelement",4]]],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,[[]]],[11,"starts_with","","Returns true if the bottom-most elements of this stack are…",18,[[]]],[11,"ends_with","","Returns true if the top-most elements of this stack are…",18,[[]]],[11,"top","","Returns the top-most element (if any).",18,[[],[["stackelement",4],["option",4]]]],[11,"new","","Creates the JSON parser.",19,[[],["parser",3]]],[11,"stack","","Provides access to the current position in the logical…",19,[[],["stack",3]]],[11,"new","","Create a JSON Builder.",20,[[],["builder",3]]],[11,"build","","",20,[[],[["result",4],["json",4],["buildererror",6]]]],[11,"new","","Creates a new decoder instance for decoding the specified…",21,[[["json",4]],["decoder",3]]],[11,"indent","","Set the indentation level for the emitted JSON",22,[[],["asprettyjson",3]]],[8,"Decoder","rustc_serialize","Trait for reading in an encoding for deserialization.",null,null],[16,"Error","","The error type for method results.",23,null],[10,"read_nil","","Read a nil value.",23,[[],["result",4]]],[10,"read_usize","","Read a usize value.",23,[[],["result",4]]],[10,"read_u64","","Read a u64 value.",23,[[],["result",4]]],[10,"read_u32","","Read a u32 value.",23,[[],["result",4]]],[10,"read_u16","","Read a u16 value.",23,[[],["result",4]]],[10,"read_u8","","Read a u8 value.",23,[[],["result",4]]],[10,"read_isize","","Read a isize value.",23,[[],["result",4]]],[10,"read_i64","","Read a i64 value.",23,[[],["result",4]]],[10,"read_i32","","Read a i32 value.",23,[[],["result",4]]],[10,"read_i16","","Read a i16 value.",23,[[],["result",4]]],[10,"read_i8","","Read a i8 value.",23,[[],["result",4]]],[10,"read_bool","","Read a bool value.",23,[[],["result",4]]],[10,"read_f64","","Read a f64 value.",23,[[],["result",4]]],[10,"read_f32","","Read a f32 value.",23,[[],["result",4]]],[10,"read_char","","Read a char value.",23,[[],["result",4]]],[10,"read_str","","Read a string value.",23,[[],[["result",4],["string",3]]]],[10,"read_enum","","Read an enumeration value.",23,[[],["result",4]]],[10,"read_enum_variant","","Read an enumeration value.",23,[[],["result",4]]],[10,"read_enum_variant_arg","","Read an unnamed data item for an enumeration variant.",23,[[],["result",4]]],[10,"read_enum_struct_variant","","Read an enumeration value.",23,[[],["result",4]]],[10,"read_enum_struct_variant_field","","Read a named data item for an enumeration variant.",23,[[],["result",4]]],[10,"read_struct","","Read an struct value.",23,[[],["result",4]]],[10,"read_struct_field","","Read a field for a struct value.",23,[[],["result",4]]],[10,"read_tuple","","Read a tuple value.",23,[[],["result",4]]],[10,"read_tuple_arg","","Read a data item for a tuple.",23,[[],["result",4]]],[10,"read_tuple_struct","","Read a tuple struct value.",23,[[],["result",4]]],[10,"read_tuple_struct_arg","","Read a data item for a tuple struct.",23,[[],["result",4]]],[10,"read_option","","Read an optional value.",23,[[],["result",4]]],[10,"read_seq","","Read a sequence of values.",23,[[],["result",4]]],[10,"read_seq_elt","","Read an element in the sequence.",23,[[],["result",4]]],[10,"read_map","","Read an associative container (map).",23,[[],["result",4]]],[10,"read_map_elt_key","","Read the key for an entry in a map.",23,[[],["result",4]]],[10,"read_map_elt_val","","Read the value for an entry in a map.",23,[[],["result",4]]],[10,"error","","Record a decoding error.",23,[[]]],[8,"Encoder","","Trait for writing out an encoding when serializing.",null,null],[16,"Error","","The error type for method results.",24,null],[10,"emit_nil","","Emit a nil value.",24,[[],["result",4]]],[10,"emit_usize","","Emit a usize value.",24,[[],["result",4]]],[10,"emit_u64","","Emit a u64 value.",24,[[],["result",4]]],[10,"emit_u32","","Emit a u32 value.",24,[[],["result",4]]],[10,"emit_u16","","Emit a u16 value.",24,[[],["result",4]]],[10,"emit_u8","","Emit a u8 value.",24,[[],["result",4]]],[10,"emit_isize","","Emit a isize value.",24,[[],["result",4]]],[10,"emit_i64","","Emit a i64 value.",24,[[],["result",4]]],[10,"emit_i32","","Emit a i32 value.",24,[[],["result",4]]],[10,"emit_i16","","Emit a i16 value.",24,[[],["result",4]]],[10,"emit_i8","","Emit a i8 value.",24,[[],["result",4]]],[10,"emit_bool","","Emit a bool value.",24,[[],["result",4]]],[10,"emit_f64","","Emit a f64 value.",24,[[],["result",4]]],[10,"emit_f32","","Emit a f32 value.",24,[[],["result",4]]],[10,"emit_char","","Emit a char value.",24,[[],["result",4]]],[10,"emit_str","","Emit a string value.",24,[[],["result",4]]],[10,"emit_enum","","Emit an enumeration value.",24,[[],["result",4]]],[10,"emit_enum_variant","","Emit a enumeration variant value with no or unnamed data.",24,[[],["result",4]]],[10,"emit_enum_variant_arg","","Emit an unnamed data item for an enumeration variant.",24,[[],["result",4]]],[10,"emit_enum_struct_variant","","Emit a enumeration variant value with no or named data.",24,[[],["result",4]]],[10,"emit_enum_struct_variant_field","","Emit a named data item for an enumeration variant.",24,[[],["result",4]]],[10,"emit_struct","","Emit a struct value.",24,[[],["result",4]]],[10,"emit_struct_field","","Emit a field item for a struct.",24,[[],["result",4]]],[10,"emit_tuple","","Emit a tuple value.",24,[[],["result",4]]],[10,"emit_tuple_arg","","Emit a data item for a tuple.",24,[[],["result",4]]],[10,"emit_tuple_struct","","Emit a tuple struct value.",24,[[],["result",4]]],[10,"emit_tuple_struct_arg","","Emit a data item for a tuple struct.",24,[[],["result",4]]],[10,"emit_option","","Emit an optional value.",24,[[],["result",4]]],[10,"emit_option_none","","Emit the `None` optional value.",24,[[],["result",4]]],[10,"emit_option_some","","Emit the `Some(x)` optional value.",24,[[],["result",4]]],[10,"emit_seq","","Emit a sequence of values.",24,[[],["result",4]]],[10,"emit_seq_elt","","Emit an element in a sequence.",24,[[],["result",4]]],[10,"emit_map","","Emit an associative container (map).",24,[[],["result",4]]],[10,"emit_map_elt_key","","Emit the key for an entry in a map.",24,[[],["result",4]]],[10,"emit_map_elt_val","","Emit the value for an entry in a map.",24,[[],["result",4]]],[8,"Decodable","","Trait for deserializing a type.",null,null],[10,"decode","","Deserialize a value using a `Decoder`.",25,[[],["result",4]]],[8,"Encodable","","Trait for serializing a type.",null,null],[10,"encode","","Serialize a value using an `Encoder`.",26,[[],["result",4]]],[8,"DecoderHelpers","","Trait with helper functions for implementing `Decodable`.",null,null],[10,"read_to_vec","","Read a sequence into a vector.",27,[[],[["vec",3],["result",4]]]],[8,"EncoderHelpers","","Trait with helper functions for implementing `Encodable`.",null,null],[10,"emit_from_vec","","Emit a vector as a sequence.",28,[[],["result",4]]],[11,"from","rustc_serialize::base64","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","rustc_serialize::hex","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","rustc_serialize::json","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"emit_nil","","",17,[[],["encoderesult",6]]],[11,"emit_usize","","",17,[[],["encoderesult",6]]],[11,"emit_u64","","",17,[[],["encoderesult",6]]],[11,"emit_u32","","",17,[[],["encoderesult",6]]],[11,"emit_u16","","",17,[[],["encoderesult",6]]],[11,"emit_u8","","",17,[[],["encoderesult",6]]],[11,"emit_isize","","",17,[[],["encoderesult",6]]],[11,"emit_i64","","",17,[[],["encoderesult",6]]],[11,"emit_i32","","",17,[[],["encoderesult",6]]],[11,"emit_i16","","",17,[[],["encoderesult",6]]],[11,"emit_i8","","",17,[[],["encoderesult",6]]],[11,"emit_bool","","",17,[[],["encoderesult",6]]],[11,"emit_f64","","",17,[[],["encoderesult",6]]],[11,"emit_f32","","",17,[[],["encoderesult",6]]],[11,"emit_char","","",17,[[],["encoderesult",6]]],[11,"emit_str","","",17,[[],["encoderesult",6]]],[11,"emit_enum","","",17,[[],["encoderesult",6]]],[11,"emit_enum_variant","","",17,[[],["encoderesult",6]]],[11,"emit_enum_variant_arg","","",17,[[],["encoderesult",6]]],[11,"emit_enum_struct_variant","","",17,[[],["encoderesult",6]]],[11,"emit_enum_struct_variant_field","","",17,[[],["encoderesult",6]]],[11,"emit_struct","","",17,[[],["encoderesult",6]]],[11,"emit_struct_field","","",17,[[],["encoderesult",6]]],[11,"emit_tuple","","",17,[[],["encoderesult",6]]],[11,"emit_tuple_arg","","",17,[[],["encoderesult",6]]],[11,"emit_tuple_struct","","",17,[[],["encoderesult",6]]],[11,"emit_tuple_struct_arg","","",17,[[],["encoderesult",6]]],[11,"emit_option","","",17,[[],["encoderesult",6]]],[11,"emit_option_none","","",17,[[],["encoderesult",6]]],[11,"emit_option_some","","",17,[[],["encoderesult",6]]],[11,"emit_seq","","",17,[[],["encoderesult",6]]],[11,"emit_seq_elt","","",17,[[],["encoderesult",6]]],[11,"emit_map","","",17,[[],["encoderesult",6]]],[11,"emit_map_elt_key","","",17,[[],["encoderesult",6]]],[11,"emit_map_elt_val","","",17,[[],["encoderesult",6]]],[11,"read_nil","","",21,[[],["decoderesult",6]]],[11,"read_usize","","",21,[[],["decoderesult",6]]],[11,"read_u8","","",21,[[],["decoderesult",6]]],[11,"read_u16","","",21,[[],["decoderesult",6]]],[11,"read_u32","","",21,[[],["decoderesult",6]]],[11,"read_u64","","",21,[[],["decoderesult",6]]],[11,"read_isize","","",21,[[],["decoderesult",6]]],[11,"read_i8","","",21,[[],["decoderesult",6]]],[11,"read_i16","","",21,[[],["decoderesult",6]]],[11,"read_i32","","",21,[[],["decoderesult",6]]],[11,"read_i64","","",21,[[],["decoderesult",6]]],[11,"read_f32","","",21,[[],["decoderesult",6]]],[11,"read_f64","","",21,[[],["decoderesult",6]]],[11,"read_bool","","",21,[[],["decoderesult",6]]],[11,"read_char","","",21,[[],["decoderesult",6]]],[11,"read_str","","",21,[[],[["decoderesult",6],["string",3]]]],[11,"read_enum","","",21,[[],["decoderesult",6]]],[11,"read_enum_variant","","",21,[[],["decoderesult",6]]],[11,"read_enum_variant_arg","","",21,[[],["decoderesult",6]]],[11,"read_enum_struct_variant","","",21,[[],["decoderesult",6]]],[11,"read_enum_struct_variant_field","","",21,[[],["decoderesult",6]]],[11,"read_struct","","",21,[[],["decoderesult",6]]],[11,"read_struct_field","","",21,[[],["decoderesult",6]]],[11,"read_tuple","","",21,[[],["decoderesult",6]]],[11,"read_tuple_arg","","",21,[[],["decoderesult",6]]],[11,"read_tuple_struct","","",21,[[],["decoderesult",6]]],[11,"read_tuple_struct_arg","","",21,[[],["decoderesult",6]]],[11,"read_option","","",21,[[],["decoderesult",6]]],[11,"read_seq","","",21,[[],["decoderesult",6]]],[11,"read_seq_elt","","",21,[[],["decoderesult",6]]],[11,"read_map","","",21,[[],["decoderesult",6]]],[11,"read_map_elt_key","","",21,[[],["decoderesult",6]]],[11,"read_map_elt_val","","",21,[[],["decoderesult",6]]],[11,"error","","",21,[[],["decodererror",4]]],[11,"encode","","",9,[[],["result",4]]],[11,"to_json","","",9,[[],["json",4]]],[11,"from","","",12,[[["parsererror",4]],["decodererror",4]]],[11,"from","","",11,[[["error",3]],["parsererror",4]]],[11,"from","","",13,[[["error",3]],["encodererror",4]]],[11,"next","","",19,[[],[["jsonevent",4],["option",4]]]],[11,"clone","rustc_serialize::base64","",1,[[],["characterset",4]]],[11,"clone","","",2,[[],["newline",4]]],[11,"clone","","",0,[[],["config",3]]],[11,"clone","","",3,[[],["frombase64error",4]]],[11,"clone","rustc_serialize::hex","",6,[[],["fromhexerror",4]]],[11,"clone","rustc_serialize::json","",9,[[],["json",4]]],[11,"clone","","",10,[[],["errorcode",4]]],[11,"clone","","",13,[[]]],[11,"clone","","",15,[[],["stackelement",4]]],[11,"eq","","",9,[[["json",4]]]],[11,"ne","","",9,[[["json",4]]]],[11,"eq","","",10,[[["errorcode",4]]]],[11,"eq","","",11,[[["parsererror",4]]]],[11,"eq","","",12,[[["decodererror",4]]]],[11,"ne","","",12,[[["decodererror",4]]]],[11,"eq","","",13,[[["encodererror",4]]]],[11,"eq","","",14,[[["jsonevent",4]]]],[11,"ne","","",14,[[["jsonevent",4]]]],[11,"eq","","",15,[[["stackelement",4]]]],[11,"ne","","",15,[[["stackelement",4]]]],[11,"partial_cmp","","",9,[[["json",4]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["json",4]]]],[11,"le","","",9,[[["json",4]]]],[11,"gt","","",9,[[["json",4]]]],[11,"ge","","",9,[[["json",4]]]],[11,"fmt","rustc_serialize::base64","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","rustc_serialize::hex","",6,[[["formatter",3]],["result",6]]],[11,"fmt","rustc_serialize::json","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","rustc_serialize::base64","",3,[[["formatter",3]],["result",6]]],[11,"fmt","rustc_serialize::hex","",6,[[["formatter",3]],["result",6]]],[11,"fmt","rustc_serialize::json","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","Encodes a json value into a string",9,[[["formatter",3]],["result",6]]],[11,"fmt","","Encodes a json value into a string",29,[[["formatter",3]],["result",6]]],[11,"fmt","","Encodes a json value into a string",30,[[["formatter",3]],["result",6]]],[11,"fmt","","Encodes a json value into a string",22,[[["formatter",3]],["result",6]]],[11,"index","","",9,[[],["json",4]]],[11,"index","","",9,[[],["json",4]]],[11,"from_str","","",9,[[],[["result",4],["json",4],["parsererror",4]]]],[11,"description","rustc_serialize::base64","",3,[[]]],[11,"description","rustc_serialize::hex","",6,[[]]],[11,"description","rustc_serialize::json","",12,[[]]],[11,"cause","","",12,[[],[["option",4],["stderror",8]]]],[11,"description","","",11,[[]]],[11,"description","","",13,[[]]]],"p":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"],[3,"PrettyJson"],[3,"AsJson"]]},\
"toml":{"doc":"A TOML-parsing library","i":[[3,"Parser","toml","Parser for converting a string to a TOML `Value` instance.",null,null],[12,"errors","","A list of all errors which have occurred during parsing.",0,null],[3,"ParserError","","A structure representing a parse error.",null,null],[12,"lo","","The low byte at which this error is pointing at.",1,null],[12,"hi","","One byte beyond the last character at which this error is…",1,null],[12,"desc","","A human-readable description explaining what the error is.",1,null],[3,"Encoder","","A structure to transform Rust values into TOML values.",null,null],[12,"toml","","Output TOML that is emitted. The current version of this…",2,null],[3,"Decoder","","A structure to transform TOML values into Rust values.",null,null],[12,"toml","","The TOML value left over after decoding. This can be used…",3,null],[3,"DecodeError","","Description for errors which can occur while decoding a…",null,null],[12,"field","","Field that this error applies to.",4,null],[12,"kind","","The type of error which occurred while decoding,",4,null],[4,"Error","","Enumeration of errors which can occur while encoding a…",null,null],[13,"NeedsKey","","Indication that a key was needed when a value was emitted,…",5,null],[13,"NoValue","","Indication that a key was emitted, but not value was…",5,null],[13,"InvalidMapKeyLocation","","Indicates that a map key was attempted to be emitted at an…",5,null],[13,"InvalidMapKeyType","","Indicates that a type other than a string was attempted to…",5,null],[13,"Custom","","A custom error type was generated",5,null],[4,"DecodeErrorKind","","Enumeration of possible errors which can occur while…",null,null],[13,"ApplicationError","","An error flagged by the application, e.g. value out of range",6,null],[13,"ExpectedField","","A field was expected, but none was found.",6,null],[13,"UnknownField","","A field was found, but it was not an expected one.",6,null],[13,"ExpectedType","","A field was found, but it had the wrong type.",6,null],[13,"ExpectedMapKey","","The nth map key was expected, but none was found.",6,null],[13,"ExpectedMapElement","","The nth map element was expected, but none was found.",6,null],[13,"NoEnumVariants","","An enum decoding was requested, but no variants were…",6,null],[13,"NilTooLong","","The unit type was being decoded, but a non-zero length…",6,null],[13,"SyntaxError","","There was an error with the syntactical structure of the…",6,null],[13,"CustomError","","A custom error was generated when decoding.",6,null],[13,"EndOfStream","","The end of the TOML input was reached too soon",6,null],[13,"InvalidType","","Produced by serde ...",6,null],[4,"Value","","Representation of a TOML value.",null,null],[13,"String","","",7,null],[13,"Integer","","",7,null],[13,"Float","","",7,null],[13,"Boolean","","",7,null],[13,"Datetime","","",7,null],[13,"Array","","",7,null],[13,"Table","","",7,null],[5,"encode","","Encodes an encodable value into a TOML value.",null,[[],["value",4]]],[5,"encode_str","","Encodes an encodable value into a TOML string.",null,[[],["string",3]]],[5,"decode","","Decodes a TOML value into a decodable type.",null,[[["value",4]],[["decodable",8],["option",4]]]],[5,"decode_str","","Decodes a string into a toml-encoded value.",null,[[],[["decodable",8],["option",4]]]],[11,"new","","Creates a new parser for a string.",0,[[],["parser",3]]],[11,"to_linecol","","Converts a byte offset from an error message to a (line,…",0,[[]]],[11,"set_require_newline_after_table","","Historical versions of toml-rs accidentally allowed a…",0,[[]]],[11,"parse","","Executes the parser, parsing the string contained within.",0,[[],[["table",6],["option",4]]]],[11,"lookup","","Parse a path into a vector of paths",0,[[],[["vec",3],["option",4]]]],[11,"new","","Constructs a new encoder which will emit to the given…",2,[[],["encoder",3]]],[11,"new","","Creates a new decoder, consuming the TOML value to decode.",3,[[["value",4]],["decoder",3]]],[6,"Array","","Type representing a TOML array, payload of the…",null,null],[6,"Table","","Type representing a TOML table, payload of the…",null,null],[11,"same_type","","Tests whether this and another value have the same type.",7,[[["value",4]]]],[11,"type_str","","Returns a human-readable representation of the type of…",7,[[]]],[11,"as_str","","Extracts the string of this value if it is a string.",7,[[],["option",4]]],[11,"as_integer","","Extracts the integer value if it is an integer.",7,[[],["option",4]]],[11,"as_float","","Extracts the float value if it is a float.",7,[[],["option",4]]],[11,"as_bool","","Extracts the boolean value if it is a boolean.",7,[[],["option",4]]],[11,"as_datetime","","Extracts the datetime value if it is a datetime.",7,[[],["option",4]]],[11,"as_slice","","Extracts the array value if it is an array.",7,[[],["option",4]]],[11,"as_table","","Extracts the table value if it is a table.",7,[[],[["option",4],["table",6]]]],[11,"lookup","","Lookups for value at specified path.",7,[[],[["option",4],["value",4]]]],[11,"lookup_mut","","Lookups for mutable value at specified path.",7,[[],[["value",4],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"emit_from_vec","","",2,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"read_to_vec","","",3,[[],[["vec",3],["result",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"clone","","",1,[[],["parsererror",3]]],[11,"clone","","",7,[[],["value",4]]],[11,"eq","","",4,[[["decodeerror",3]]]],[11,"ne","","",4,[[["decodeerror",3]]]],[11,"eq","","",6,[[["decodeerrorkind",4]]]],[11,"ne","","",6,[[["decodeerrorkind",4]]]],[11,"eq","","",7,[[["value",4]]]],[11,"ne","","",7,[[["value",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"from_str","","",7,[[],[["vec",3],["result",4],["value",4]]]],[11,"description","","",1,[[]]],[11,"description","","",5,[[]]],[11,"description","","",4,[[]]],[11,"emit_nil","","",2,[[],[["error",4],["result",4]]]],[11,"emit_usize","","",2,[[],[["error",4],["result",4]]]],[11,"emit_u8","","",2,[[],[["error",4],["result",4]]]],[11,"emit_u16","","",2,[[],[["error",4],["result",4]]]],[11,"emit_u32","","",2,[[],[["error",4],["result",4]]]],[11,"emit_u64","","",2,[[],[["error",4],["result",4]]]],[11,"emit_isize","","",2,[[],[["error",4],["result",4]]]],[11,"emit_i8","","",2,[[],[["error",4],["result",4]]]],[11,"emit_i16","","",2,[[],[["error",4],["result",4]]]],[11,"emit_i32","","",2,[[],[["error",4],["result",4]]]],[11,"emit_i64","","",2,[[],[["error",4],["result",4]]]],[11,"emit_bool","","",2,[[],[["error",4],["result",4]]]],[11,"emit_f32","","",2,[[],[["error",4],["result",4]]]],[11,"emit_f64","","",2,[[],[["error",4],["result",4]]]],[11,"emit_char","","",2,[[],[["error",4],["result",4]]]],[11,"emit_str","","",2,[[],[["error",4],["result",4]]]],[11,"emit_enum","","",2,[[],[["error",4],["result",4]]]],[11,"emit_enum_variant","","",2,[[],[["error",4],["result",4]]]],[11,"emit_enum_variant_arg","","",2,[[],[["error",4],["result",4]]]],[11,"emit_enum_struct_variant","","",2,[[],[["error",4],["result",4]]]],[11,"emit_enum_struct_variant_field","","",2,[[],[["error",4],["result",4]]]],[11,"emit_struct","","",2,[[],[["error",4],["result",4]]]],[11,"emit_struct_field","","",2,[[],[["error",4],["result",4]]]],[11,"emit_tuple","","",2,[[],[["error",4],["result",4]]]],[11,"emit_tuple_arg","","",2,[[],[["error",4],["result",4]]]],[11,"emit_tuple_struct","","",2,[[],[["error",4],["result",4]]]],[11,"emit_tuple_struct_arg","","",2,[[],[["error",4],["result",4]]]],[11,"emit_option","","",2,[[],[["error",4],["result",4]]]],[11,"emit_option_none","","",2,[[],[["error",4],["result",4]]]],[11,"emit_option_some","","",2,[[],[["error",4],["result",4]]]],[11,"emit_seq","","",2,[[],[["error",4],["result",4]]]],[11,"emit_seq_elt","","",2,[[],[["error",4],["result",4]]]],[11,"emit_map","","",2,[[],[["error",4],["result",4]]]],[11,"emit_map_elt_key","","",2,[[],[["error",4],["result",4]]]],[11,"emit_map_elt_val","","",2,[[],[["error",4],["result",4]]]],[11,"read_nil","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_usize","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_u64","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_u32","","",3,[[],[["result",4],["decodeerror",3]]]],[11,"read_u16","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_u8","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_isize","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_i64","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_i32","","",3,[[],[["result",4],["decodeerror",3]]]],[11,"read_i16","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_i8","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_bool","","",3,[[],[["result",4],["decodeerror",3]]]],[11,"read_f64","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_f32","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_char","","",3,[[],[["result",4],["decodeerror",3]]]],[11,"read_str","","",3,[[],[["decodeerror",3],["result",4],["string",3]]]],[11,"read_enum","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_enum_variant","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_enum_variant_arg","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_enum_struct_variant","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_enum_struct_variant_field","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_struct","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_struct_field","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_tuple","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_tuple_arg","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_tuple_struct","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_tuple_struct_arg","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_option","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_seq","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_seq_elt","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_map","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_map_elt_key","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"read_map_elt_val","","",3,[[],[["decodeerror",3],["result",4]]]],[11,"error","","",3,[[],["decodeerror",3]]],[11,"encode","","",7,[[],["result",4]]]],"p":[[3,"Parser"],[3,"ParserError"],[3,"Encoder"],[3,"Decoder"],[3,"DecodeError"],[4,"Error"],[4,"DecodeErrorKind"],[4,"Value"]]},\
"toml_loader":{"doc":"","i":[[3,"Loader","toml_loader","Imlements helper functions for loading and parsing .toml…",null,null],[4,"LoadError","","Wraps all errors this library can produce",null,null],[13,"Io","","IO Error",0,null],[13,"Parse","","TOML parsing error",0,null],[11,"from_file","","Create Toml::Value from file specified by path",1,[[["path",3]],[["loaderror",4],["value",4],["result",4]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",0,[[["error",3]],["loaderror",4]]],[11,"from","","",0,[[["vec",3],["parsererror",3]],["loaderror",4]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"description","","",0,[[]]],[11,"cause","","",0,[[],[["error",8],["option",4]]]]],"p":[[4,"LoadError"],[3,"Loader"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);